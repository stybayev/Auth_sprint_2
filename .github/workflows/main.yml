name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8-html mypy

      - name: Run linter
        run: |
          flake8 . --count --select=E9,F63,F7 --show-source --statistics --format=html --htmldir=lint_report.html

      - name: Upload linter report
        uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: lint_report.html
      
      - name: Run mypy
        run: |
          mypy . --exclude app --exclude ugc_service --exclude alembic --exclude auth --exclude benchmark --exclude etl --exclude file_api --exclude rate_limit --ignore-missing-imports True --disallow-untyped-defs --disallow-incomplete-defs False --no-strict-optional
          
      - name: Send success message to Telegram
        if: success()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          curl -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
               -d "chat_id=$CHAT_ID&text=CI%20passed%20for%20pull%20request%20#${{ github.event.number }}%20on%20branch%20${{ github.head_ref }}"

      - name: Send failure message to Telegram
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          curl -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
               -d "chat_id=$CHAT_ID&text=CI%20failed%20for%20pull%20request%20#${{ github.event.number }}%20on%20branch%20${{ github.head_ref }}"
