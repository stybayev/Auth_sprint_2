input {
  gelf {
    port => 5044
    type => "all"
    codec => "plain"
  }
  file {
    path => ["/var/log/nginx/access-log.json"]
    codec => "plain"
    tags => ["nginx"]
  }
}

filter {
  if "nginx" in [tags] {
    grok {
      match => {
        "message" => [
          "%{IPORHOST:remote_addr} - %{DATA:remote_user} \\[%{HTTPDATE:time_local}\\] \"%{WORD:request_method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:http_user_agent}\" %{DATA:request_id} \"%{DATA:http_x_forwarded_for}\""
        ]
      }
      remove_field => ["message"]
    }

    date {
      match => ["time_local", "dd/MMM/yyyy:HH:mm:ss Z"]
      target => "@timestamp"
      remove_field => ["time_local"]
    }

    mutate {
      add_field => {"severity" => "%{status}"}
    }

    if [severity] =~ /^5\d\d$/ {
      mutate { replace => { "severity" => "ERROR" } }
    } else if [severity] =~ /^4\d\d$/ {
      mutate { replace => { "severity" => "WARN" } }
    } else {
      mutate { replace => { "severity" => "INFO" } }
    }

    mutate {
      remove_field => ["@version", "host"]
    }
  }

  if "app-service" in [tags] {
    grok {
    match => {
      "message" => [
        "%{LOGLEVEL:log_level}: %{IP:client_ip}:%{NUMBER:client_port} - '%{WORD:request_method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}' %{NUMBER:status_code} %{WORD:status_message}",
        "%{TIMESTAMP_ISO8601:log_timestamp} - %{WORD:application_name} - %{LOGLEVEL:log_level} - %{GREEDYDATA:log_message}",
        "%{GREEDYDATA:log_message}"
      ]
    }
  }

  # Преобразуем временные метки, если это необходимо
  #date {
   # match => ["timestamp", "ISO8601"]
   # target => "@timestamp"
  #}

  # Преобразование уровня лога в верхний регистр (опционально)
  mutate {
    uppercase => ["log_level"]
  }

  # Удаляем оригинальное сообщение, если больше не нужно
  mutate {
    remove_field => ["message"]
  }

    if [log_level] == "DEBUG" {
      drop { }
    }

    if [log_message] =~ /(password|secret|token)/ {
      mutate {
        replace => { "log_message" => "[FILTERED]" }
      }
    }

    mutate {
      add_field => {"severity" => "%{log_level}"}
    }

    mutate {
      remove_field => ["@version", "host"]
    }
  }
}

output {
  stdout { codec => rubydebug }

  if "nginx" in [tags] {
    elasticsearch {
      hosts => ["${ES_HOST}"]
      index => "nginx-%{+YYYY.MM.dd}"
    }
  } else if "app-service" in [tags] or "app-service" in [tag]{
    elasticsearch {
      hosts => ["${ES_HOST}"]
      index => "app-%{+YYYY.MM.dd}"
    }
  } else {
    elasticsearch {
      hosts => ["${ES_HOST}"]
      index => "xxx-%{+YYYY.MM}"
    }
  }
}
